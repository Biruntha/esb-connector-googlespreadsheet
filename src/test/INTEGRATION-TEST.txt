Product: WSO2 ESB googlespreadsheet Connector for Google Sheets API Version v4 + Integration Tests

 Pre-requisites:

    - Maven 3.x
    - Java 1.7 or above
    - The org.wso2.esb.integration.integration-base project is required. The test suite has been configured to download this project automatically. If the automatic download fails, download the following project and compile it using the mvn clean install command to update your local repository:
      https://github.com/wso2-extensions/esb-integration-base

    Tested Platforms:

    - Ubuntu 16.04
    - WSO2 EI 6.1.1
    - java 1.8



Steps to follow in setting integration test.


 1. Download EI 6.1.1  by navigating to the following URL: http://wso2.com/products/enterprise-service-bus/#
 2. Add the following property in the wso2server.sh file.
    -XX:-UseSplitVerifier \

 3. Get a access token from OAuth 2.0 Playground.
       i)  Using the URL "https://developers.google.com/oauthplayground/" create a access token and refresh token.

      Note: Application needs access to user data, it asks Google for a particular scope of access.
            Here's the OAuth 2.0 scope information for the Google Sheets API version 4 :"https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.readonly", "https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/spreadsheets.readonly"

 4. Update the googlespreadsheet properties file at location "<GOOGLESPREADSHEET_CONNECTOR_HOME>/src/test/resources/artifacts/ESB/connector/config" as below.

        		refreshToken 					                    - Use the Refresh token.
    	     	clientId						                    - Use the Client ID.
    	    	clientSecret					                    - Use the Client Secret.
    	        accessToken				                            - Use the accessToken.
    			apiUrl						                        - Use the API URL of the google spreadsheet.
    		    sheetId					                            - Update with your Sheet Id from where data should be copied.
    	        destinationSpreadsheetId		                    - Update with your destination Sheet Id to copy the sheet to.
    		    ranges, ranges1, ranges2                            - Update with your Sheet name.
    	 	    requestsaddSheetBatchRequest                        - Update with your Sheet title to add sheet.
    		    requestsaddSheetBatchRequest1                       - Update with your Sheet title to add sheet.
    		    requestsdeleteSheetBatchRequest                     - Update with your Sheet sheetId to delete sheet.
    		    requestsdeleteSheetBatchRequest1                    - Update with your Sheet sheetId to delete sheet.
    	 	    requestsupdateSheetPropertiesBatchRequest           - Update with your Sheet title, sheetId to update sheet properties.
    		    requestsaddConditionalFormatRuleBatchRequest        - Update with your Sheet sheetId to add contitional format rule.
    		    requestsAppendDimension                             - Update with your Sheet sheetId to append dimension.
    		    requestsAutoResizeDimensionsBatchRequest            - Update with your Sheet sheetId to auto resize dimention.
    		    requestsCopyPasteBatchRequest                       - Update with your Sheet sheetId to copy and paste.
    			requestsCutPasteBatchRequest				        - Update with your Sheet sheetId to cut paste.
    		    requestsDeleteConditionalFormatRuleBatchRequest		- Update with your Sheet sheetId to delete conditional format rule.
    		    requestDeleteDimensionBatchRequest				    - Update with your Sheet sheetId to delete dimension.
    	        requestsInsertDimensionBatchRequest					- Update with your Sheet sheetId to insert dimension.
    	 	    requestsMergeCellsBatchRequest				        - Update with your Sheet sheetId to merge cells.
    	        requestsMoveDimensionBatchRequest                   - Update with your Sheet sheetId to move dimension.
                requestsRepeatCellsBatchRequest                     - Update with your Sheet sheetId to repeat cells.
                requestsSetDataValidationBatchRequest               - Update with your Sheet sheetId to set data validation.
                requestsSortRangeBatchRequest                       - Update with your Sheet sheetId to sort range.
                requestsUpdateBordersBatchRequestMandatory          - Update with your Sheet sheetId to update borders.
                requestsUpdateCellsBatchRequest                     - Update with your Sheet sheetId to update cells.
                requestsUpdateConditionalFormatRuleBatchRequest     - Update with your Sheet sheetId to update conditional format rule.
                requestsUpdateDimensionPropertiesBatchRequest       - Update with your Sheet sheetId to update dimension properties.
                rangeaddRows                                        - Range to add rows and Update with your Sheet name.
                data                                                - To edit multiple cell data and Update with your Sheet name.
                rangeEditCell                                       - Range to edit cell data and Update with your Sheet name.
                rangeGetCellData                                    - Range to get cell data and Update with your Sheet name.
 5.  Navigate to "{ESB_Connector_Home}/" and run the following command.
             $ mvn clean install

Note: In Integration test Thread.sleep() method has been used because of the API allows limited no of API calls. If you want
to change the sleeping time, you can change (sleepingTime) constant value in Integration Test.